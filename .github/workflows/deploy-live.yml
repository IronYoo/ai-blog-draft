name: Deploy API Live

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ai-blog-draft
          IMAGE_TAG: latest
        run: |
          docker build -f Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Prepare deployment package
        run: |
          mkdir -p deploy
          cp Dockerrun.aws.json deploy/Dockerrun.aws.json
          cp -r .ebextensions/live deploy/.ebextensions
          cd deploy
          zip -r ../deploy-package.zip .
          cd ..

      - name: Upload package to S3 bucket
        run: aws s3 cp deploy-package.zip s3://ai-blog-draft-application-live/

      - name: Generate unique variable based on timestamp
        run: echo VERSION_VAR=ai-blog-draft-$(date +%Y-%m-%d-%H:%M:%S) >> $GITHUB_ENV

      - name: Publish Eb Version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ai-blog-draft \
          --source-bundle S3Bucket="ai-blog-draft-application-live",S3Key="deploy-package.zip" \
          --version-label "${{ env.VERSION_VAR }}" \
          --description "${{ env.VERSION_VAR }}"
        shell: bash